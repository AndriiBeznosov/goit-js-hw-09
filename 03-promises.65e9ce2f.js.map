{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,OAAQC,SAASC,cAAc,SAC/BC,MAAOF,SAASC,cAAc,kBAC9BE,KAAMH,SAASC,cAAc,iBAC7BG,MAAOJ,SAASC,cAAc,mBAC9BI,UAAWL,SAASC,cAAc,iBAClCK,aAAcN,SAASC,cAAc,oBAEvCH,EAAKC,OAAOQ,iBAAiB,SAmE7B,SAAkBC,GAChBC,EAAOD,EAAEE,OAAOC,MAAQH,EAAEE,OAAOE,SAnEnCd,EAAKC,OAAOQ,iBAAiB,UAS7B,SAA4BC,GAC1BA,EAAEK,iBACFC,QAAQC,IAAIN,GACZX,EAAKO,UAAUW,UAAW,EAC1BlB,EAAKQ,aAAaU,UAAW,EAe7BC,YAAW,KACJnB,EAAKO,UAAUW,WAClBlB,EAAKQ,aAAaU,UAAW,GAE/BE,EAAUC,OAAOV,EAAOP,OACxBkB,EAAaC,aAAY,KAEvB,GADAH,GAAWC,OAAOV,EAAON,MACrBmB,IAAmBH,OAAOV,EAAOc,QAEnC,OADAD,GAAkB,GAmBHE,EAlBMF,EAkBIpB,EAlBYgB,EAmBpC,IAAIO,SAAQ,CAACC,EAASC,KACLC,KAAKC,SAAW,GAEpCH,EAAQ,C,SAAEF,E,MAAUtB,IAEpByB,EAAO,C,SAAEH,E,MAAUtB,QAvBd4B,MAAK,EAACN,SAAEA,EAAQtB,MAAEA,MACjBN,EAAAmC,OAAOC,QAAQ,uBAAqBR,QAAiBtB,UAEtD+B,OAAM,EAACT,SAAEA,EAAQtB,MAAEA,MAClBN,EAAAmC,OAAOG,QAAQ,sBAAoBV,QAAetB,UAa9D,IAAuBsB,EAAUtB,EAT3BiC,cAAcf,GACdtB,EAAKO,UAAUW,UAAW,EAC1BlB,EAAKQ,aAAaU,UAAW,EAC7BM,EAAiB,EACjBJ,EAAUC,OAAOV,EAAOP,SACvBO,EAAON,QACTM,EAAOP,OApCVJ,EAAKC,OAAOqC,WAfdtC,EAAKQ,aAAaC,iBAAiB,SAiBnC,WACE4B,cAAcf,GACdtB,EAAKO,UAAUW,UAAW,EAC1BlB,EAAKQ,aAAaU,UAAW,EAC7BM,EAAiB,EACjBJ,EAAUC,OAAOV,EAAOP,OACxBJ,EAAKC,OAAOqC,WArBd,IAAI3B,EAAS,GACTa,EAAiB,EACjBF,EAAa,KACbF,EAAU,EACdpB,EAAKQ,aAAaU,UAAW","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  onForm: document.querySelector('.form'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amout: document.querySelector('[name=\"amount\"]'),\n  submitBtn: document.querySelector('.btn-promises'),\n  btnResetStop: document.querySelector('.btn-stop-reset'),\n};\nrefs.onForm.addEventListener('input', getInput);\nrefs.onForm.addEventListener('submit', startCreatePromise);\nrefs.btnResetStop.addEventListener('click', stopResetForm);\n\nlet onForm = {};\nlet numberPosition = 0;\nlet intervalId = null;\nlet onDeley = 0;\nrefs.btnResetStop.disabled = true;\n\nfunction startCreatePromise(e) {\n  e.preventDefault();\n  console.log(onForm);\n  refs.submitBtn.disabled = true;\n  refs.btnResetStop.disabled = false;\n\n  onSetInterval();\n  refs.onForm.reset();\n}\nfunction stopResetForm() {\n  clearInterval(intervalId);\n  refs.submitBtn.disabled = false;\n  refs.btnResetStop.disabled = true;\n  numberPosition = 0;\n  onDeley = Number(onForm.delay);\n  refs.onForm.reset();\n}\n\nfunction onSetInterval() {\n  setTimeout(() => {\n    if (!refs.submitBtn.disabled) {\n      refs.btnResetStop.disabled = true;\n    }\n    onDeley = Number(onForm.delay);\n    intervalId = setInterval(() => {\n      onDeley += Number(onForm.step);\n      if (numberPosition !== Number(onForm.amount)) {\n        numberPosition += 1;\n        return createPromise(numberPosition, onDeley)\n          .then(({ position, delay }) => {\n            Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n          })\n          .catch(({ position, delay }) => {\n            Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n          });\n      }\n\n      clearInterval(intervalId);\n      refs.submitBtn.disabled = false;\n      refs.btnResetStop.disabled = true;\n      numberPosition = 0;\n      onDeley = Number(onForm.delay);\n    }, onForm.step);\n  }, onForm.delay);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n}\n\nfunction getInput(e) {\n  onForm[e.target.name] = e.target.value;\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","onForm","document","querySelector","delay","step","amout","submitBtn","btnResetStop","addEventListener","e","$47d4ff9957288465$var$onForm","target","name","value","preventDefault","console","log","disabled","setTimeout","$47d4ff9957288465$var$onDeley","Number","$47d4ff9957288465$var$intervalId","setInterval","$47d4ff9957288465$var$numberPosition","amount","position","Promise","resolve","reject","Math","random","then","Notify","success","catch","failure","clearInterval","reset"],"version":3,"file":"03-promises.65e9ce2f.js.map"}